package ru.danko.moty;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.yaml.snakeyaml.DumperOptions;
import org.yaml.snakeyaml.Yaml;

public class Config {
    
	private static File file = new File("config.yml");
	private static Map<String, Object> map;
	public static void saveConfig(Map<String, Object> map) {
		 PrintWriter writer = null;
		try {
			writer = new PrintWriter(file);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			return;
		} 
		 DumperOptions options = new DumperOptions(); 
		 options.setIndent(2); 
		 options.setAllowUnicode(false);
		 options.setPrettyFlow(true); 
		 options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK); 
		 Yaml yaml = new Yaml(options); 
		 yaml.dump(map, writer); 
	}
	private static Map<String, Object> getDefaltConfig(){
		 Map<String, Object> map = new HashMap<>(); 
		 
		 
		 
		map.put("Token", "YOUR_TELEGRAM_TOKEN");
		map.put("GroupId", "YOUR_GROUP_ID");
		map.put("Message.welcome", "–ü—Ä–∏–≤–µ—Ç! –Ø –ú–æ—Ç—è,ü¶í –±–æ—Ç –¥–ª—è —ç–º–ø–∞—Ç–∏–∏. \r\n"
				+ "\r\n"
				+ "–ß–µ—Ä–µ–∑ –º–µ–Ω—è –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —ç–º–ø–∞—Ç–∏—é –∏–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç–º–ø–∞—Ç–∏–∏. –ò–ª–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ –æ–±—â–µ–Ω–∏—è.\r\n"
				+ "\n"
				+ "–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ —á–∞—Ç–µ ‚òïÔ∏è –ö–∞—Ñ–µ –≠–º–ø–∞—Ç–∏–∏ (https://t.me/empathycafe)\n"
				+ "\n"
				+ "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –æ—Ç–∫–ª–∏–∫–∏, –∏ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≥–æ, –∫—Ç–æ –±–ª–∏–∂–µ —Ç–≤–æ–µ–º—É —Å–µ—Ä–¥—Ü—É –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç üß°, –Ω–∏–∫–æ–≥–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –æ–±–∏–¥–µ–≤.");
		
		map.put("Message.add_point_out", "–î–≤–µ –∞–ø–µ–ª—å—Å–∏–Ω–∫–∏ –≤ —Ç–≤–æ–π –º–µ—à–æ—á–µ–∫üí∞\r\n –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è üçä%summ% –∞–ø–µ–ª—å—Å–∏–Ω–æ–∫!");
		map.put("Message.add_point_otk_accept", "–¢–≤–æ–π –æ—Ç–∫–ª–∏–∫ –±—ã–ª –ø—Ä–∏–Ω—è—Ç! –û–¥–Ω–∞ –∞–ø–µ–ª—å—Å–∏–Ω–∫–∞ –≤ —Ç–≤–æ–π –º–µ—à–æ—á–µ–∫üí∞ \n–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è üçä%summ% –∞–ø–µ–ª—å—Å–∏–Ω–æ–∫!");
		map.put("Message.add_point_otk_put", "–¢–≤–æ–π –æ—Ç–ª–∏–∫ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–≤—Ç–æ—Ä—É –∑–∞–ø—Ä–æ—Å–∞! –û–¥–Ω–∞ –∞–ø–µ–ª—å—Å–∏–Ω–∫–∞ –≤ —Ç–≤–æ–π –º–µ—à–æ—á–µ–∫üí∞ \n–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è üçä%summ% –∞–ø–µ–ª—å—Å–∏–Ω–æ–∫!");
		map.put("Message.Statistic", "–¢–≤–æ–∏ –∞–ø–µ–ª—å—Å–∏–Ω–∫–∏ (–í —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑–∞–Ω—ã –∞–ø–µ–ª—å—Å–∏–Ω–∫–∏ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü):\r\n"
		 		+ "–ó–∞ ü¶í –ø—Ä–µ–¥–ª. —ç–º–ø–∞—Ç–∏–∏: %sendEmp% üçä\r\n"
		 		+ "–ó–∞ üåø –∑–∞–ø—Ä. —ç–º–ø–∞—Ç–∏–∏: %inviteEmp% üçä\r\n"
		 		+ "–ó–∞ üí¨ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤: %companion% üçä\r\n"
		 		+ "–ó–∞ ü§ù –ø—Ä–∏–Ω—è—Ç—ã–µ –æ—Ç–∫–ª–∏–∫–∏: %accept%üçä\r\n"
		 		+ "\r\n"
		 		+ "–í—Å–µ–≥–æ –∞–ø–µ–ª—å—Å–∏–Ω–æ–∫: %summ%üçä");
		map.put("Message.NotMemberGroup", "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã –Ω–∞ –Ω–∞—à —á–∞—Ç! @danko00010");
		map.put("Message.Profit", "–°–ø–∞—Å–∏–±–æ! –¢–≤–æ–π –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç @danko00010. –û–∂–∏–¥–∞–π, –ø–æ–∫–∞ –∫—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞ –Ω–µ–≥–æ –æ—Ç–∫–ª–∏–∫–Ω–µ—Ç—Å—è! \n\n–¢—ã –º–æ–∂–µ—à—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –Ω–∞–ø–∏—Å–∞—Ç—å ¬´–ó–∞–∫—Ä—ã—Ç—å –∑–∞–ø—Ä–æ—Å¬ª, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç—É–∞–ª–µ–Ω..");
		map.put("Message.textField_SendEmp", "–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Ç–≤–æ–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.\n\n–ü—Ä–∏–º–µ—Ä—ã:\n\n–ü—Ä–∏–≤–µ—Ç! –ï—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∫–æ–º—É-–Ω–∏–±—É–¥—å –ø–æ—ç–º–ø–∞—Ç–∏—Ä–æ–≤–∞—Ç—å.\n\n–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –ï—Å—Ç—å –≤—Ä–µ–º—è –Ω–∞ —ç–º–ø–∞—Ç–∏—é. –°–≤–æ–±–æ–¥–µ–Ω —Å–ª–µ–¥—É—é—â–∏–µ –¥–≤–∞ —á–∞—Å–∞. –û—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ —Ç–µ–º–∞ –ª–∏—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.");
		map.put("Message.textField_InviteEmp", "–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞. –†–∞—Å—Å–∫–∞–∂–∏ –æ —Ç–æ–º —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ —ç–º–ø–∞—Ç–∏—è, –æ–±–æ–∑–Ω–∞—á—å —Ç–µ–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–∂–∏–≤–∞–µ–º—ã—Ö —ç–º–æ—Ü–∏–π –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 10.\n\n–ü—Ä–∏–º–µ—Ä—ã: \n\n–ü—Ä–∏–≤–µ—Ç! –•–æ—Ç–µ–ª–æ—Å—å –±—ã —ç–º–ø–∞—Ç–∏–∏. –¢–µ–º–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –º—É–∂–µ–º. –ù–∞ 8 –±–∞–ª–ª–æ–≤.\n\n–í—Å–µ –ø—Ä–∏–≤–µ—Ç! –£ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –µ—Å—Ç—å –≤—Ä–µ–º—è –Ω–∞ —ç–º–ø–∞—Ç–∏—é? –ü–µ—Ä–µ–∂–∏–≤–∞—é –Ω–∞—Å—á–µ—Ç —Å–¥–∞—á–∏ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤. –ü—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 6 –±–∞–ª–ª–æ–≤.");
		map.put("Message.textField_companion", "–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n–ü—Ä–∏–º–µ—Ä: ¬´–•–æ—á—É –ø–æ–±–æ–ª—Ç–∞—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–Ω—É—é —Ç–µ–º—É. –ò–ª–∏, –º–æ–∂–µ—Ç –±—ã—Ç—å, –∫–æ–º—É-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ —Ç–µ–º–∞ —Ç—Ä–∞–Ω—Å–≥—É–º–∞–Ω–∏–∑–º–∞.¬ª");
		
		map.put("ChatSend_SendEmp", "ü¶í –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç–º–ø–∞—Ç–∏–∏.\n\n%message%\n\n%gender% %name% %username%");
		map.put("ChatSend_InviteEmp", "üåø –ó–∞–ø—Ä–æ—Å –Ω–∞ —ç–º–ø–∞—Ç–∏—é.\n\n%message%\n\n%gender% %name% %username%");
		map.put("ChatSend_Companion", "üí¨ –ò—â—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.\n\n%message%\n\n%gender% %name% %username%");
		
		map.put("Message.otk_accept", "–¢—ã –ø—Ä–∏–Ω—è–ª –æ—Ç–∫–ª–∏–∫ –æ—Ç %name% %username%.\nüì®–ù–∞–ø–∏—à–∏ –µ–º—É –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.");
		return map;
	}
	public static void set(String key, Object obj) {
		if(map.containsKey(key)) {
			map.remove(key);
		}
		map.put(key, obj);
		saveConfig(map);
	}
	public static Boolean getBoolean(String key) {
		boolean b = (boolean) map.get(key);
		/*if(s.equalsIgnoreCase("true")) {
			b  = true;
		} 
		if(s.equalsIgnoreCase("false")) {
			b = false;
		}*/
		return b;
	}
	public static String getString(String key) {
		return (String) map.get(key);
	}
	@SuppressWarnings("removal")
	public static Double getDouble(String key) {
		Double d = 0.0;
		try {
		d = new Double(getString(key));
		}catch(NumberFormatException ex) {
			System.out.println("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: –æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —á–∏—Å–ª–∞ (double): "+key);
			ex.printStackTrace();
		}
		return d;
	}
	@SuppressWarnings("removal")
	public static Long getLong(String key) {
		long lo = 0;
		try {
		lo = new Long(getString(key));
		}catch(NumberFormatException ex) {
			System.out.println("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: –æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —á–∏—Å–ª–∞ (long): "+key);
			ex.printStackTrace();
		}
		return lo;
	}
	@SuppressWarnings("removal")
	public static int getInt(String key) {
		int i = 0;
		try {
		i = new Integer(getString(key));
		}catch(NumberFormatException ex) {
			System.out.println("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: –æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —á–∏—Å–ª–∞ (int): "+key);
			ex.printStackTrace();
		}
		return i;
	}
	public static List<String> getStringList(String key) {
		List<String> list = new ArrayList<String>();
		for(String s:getString(key).split(",")) {
			list.add(s);
		}
		return list;
	}
	public static void loadConfig(){
		DumperOptions options = new DumperOptions(); 
		 options.setIndent(2); 
		 options.setAllowUnicode(false);
		 options.setPrettyFlow(true); 
		 options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK); 
		 Yaml yaml = new Yaml(options); 
		  InputStream inputStream = null;
		 
		try {
			inputStream = new FileInputStream(file);
		} catch (FileNotFoundException e1) {
			try {
				file.createNewFile();
			} catch (IOException e2) {
				e2.printStackTrace();
			}
			saveConfig(getDefaltConfig());
			try {
				inputStream = new FileInputStream(file);
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		} 
		 map = yaml.load(inputStream);
		
	}
	public static  Map<String, Object>  getConfig() {
	return map;
	}
	@SuppressWarnings("unchecked")
	public static List<String> getStringListOld(String string) {
		return (List<String>) map.get(string);
	}
}
